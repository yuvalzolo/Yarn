@using yarn_rider.Models
@model yarn_rider.Models.User

@{
    ViewBag.Title = "Registration";
}
<div class="row">

    <div class="col">
        

        <!-- logo -->
        <a class="navbar-brand mr-5 mt-4" href="">
            <img class="img-fluid" style="width: 5.5rem;" alt="yarn" src="../Images/logo0.5.svg">
        </a>

    </div>

        </div>

        <div class="row justify-content-center">

            <div class="col-4">

                <div class="p-3 mb-5" style="background-color:rgba(28, 29, 35, 0.9); border-radius: 1rem;">

                    <!-- register success window -->
                    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
                    {
                        if (ViewBag.Message != null)
                        {
                            <div class="">
                                <strong>Success! </strong>
                                <hr/>
                                @ViewBag.Message
                            </div>
                        }
                    }
                    else
                    {
                        using (Html.BeginForm())
                        {
                            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                            {
                                @Html.AntiForgeryToken()
                                <h2 class="pt-3 pb-2" style="padding-left: 15px;">@ViewBag.Title</h2>

                                <hr/>

                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})

                                // if we register the 1st user he will be an Admin
                                
                                bool userType = false;
                                SiteDbContext db = new SiteDbContext();
                                
                                if (db.Users.Count() == 0)
                                {
                                    userType = true;
                                }
                                
                                @Html.HiddenFor(model => model.Admin, new {Value = userType })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmailID, new {@class = "col"})
                                    <div class="col">
                                        @Html.EditorFor(model => model.EmailID, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.EmailID, "", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserName, htmlAttributes: new {@class = "col"})
                                    <div class="col">
                                        @Html.EditorFor(model => model.UserName, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.UserName, "", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "col"})
                                    <div class="col">
                                        @Html.EditorFor(model => model.Password, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.Password, "", new {@class = "text-danger"})
                                        @Html.ValidationMessage("EmailExist", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new {@class = "col"})
                                    <div class="col">
                                        @Html.EditorFor(model => model.ConfirmPassword, new {htmlAttributes = new {@class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Country, htmlAttributes: new {@class = "col"})
                                    @using yarn_rider.Models
                                    <div class="col">
                                        @Html.DropDownListFor(m => m.Country,
                                            new SelectList(Enum.GetValues(typeof(Country))),
                                            "select country", new {@class = "form-control"})
                                        @Html.ValidationMessageFor(model => model.Country, "", new {@class = "text-danger"})
                                    </div>
                                </div>

                                <div class="px-3" style="font-size: 0.8rem;">
                                    <p>
                                        By clicking "Create an account" below, you agree to out Trems of Services and Privacy Statement
                                    </p>
                                </div>

                                <div class="form-group">
                                    <div class="col">
                                        <input type="submit" class="btn btn-primary-landingPage col-12" value="Create an account"/>
                                    </div>
                                </div>
                            }

                            <hr/>

                            <p style="padding-left: 15px;">
                                Already a member?
                                @Html.ActionLink(" Log In.", "Login")
                            </p>
                        }
                    }
                </div>
            </div>
        </div>

@section Scripts {
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}